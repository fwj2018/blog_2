<?php
/**
 * 【友情链接业务逻辑层】
 * Created by PhpStorm.
 * User: ZH
 * Date: 2018/11/24 0024
 * Time: 15:50
 */

namespace app\models\admin;

use app\models\BaseModel;

class Message extends BaseModel
{
    public static $message = 'message';
    public $title, $keywords, $description;

    public function __construct()
    {
        parent::__construct();
    }

    /**
     * 规则校验
     * @return array
     */
    public function rules()
    {
        return [
            [['title', 'keywords', 'description'], 'required'],
            [['title', 'keywords','description'], 'checkSeo'],
        ];
    }

    /**
     * 地址标签
     * @return array
     */
    public function attributeLabels()
    {
        return [
            'title'         => '标题',
            'keywords'      => '关键字',
            'description'   => '描述',
        ];
    }

    /**
     * 表名
     * @return mixed|string
     */
    public static function tableName()
    {
        return self::$message; // TODO: Change the autogenerated stub
    }

    //校验数据
    public function checkSeo($attribute)
    {
        switch ($attribute) {
            case 'title':
                if (strlen(trim($this->title)) > 80) {
                    return $this->addError($attribute, '标题不超过80个字符。');
                }
                break;
            case 'keywords':
                if (strlen(trim($this->keywords)) > 100) {
                    return $this->addError($attribute, '关键字不超过100个字符。');
                }
                break;
            case 'description':
                if (strlen(trim($this->description)) > 200) {
                    return $this->addError($attribute, '描述不超过200个字符。');
                }
                break;
        }
    }

    /**
     * URL新增和编辑
     * @param $data
     * @return bool|string|void
     */
    public function SeoAddOrEdit($data)
    {
        try {
            $this->addOrEdit(self::$message, $data, 'id');
            return true;
        } catch (\Exception $e) {
            return $e->getMessage();
        }
    }

    /**
     * 留言列表
     * @return array
     * @throws \yii\db\Exception
     */
    public function lists($page, $limit, $name)
    {
        $data = [];//用于返回的数据
        $data['code'] = 0;
        $data['msg'] = '';
        $data['count'] = $this->getS(self::$message, 'count(*)', 2);
        $extra = "order by id desc limit " . ($page - 1) * $limit . "," . $limit;
        //开启模糊查询
        $where = '';
        $param = [];
        if (!empty($name)) {
            $where .= " name like :name AND";
            $param['name'] = '%' . trim($name) . '%';
        }
        $where .= ' 1=1';
        $data['data'] = $this->getS(self::$message, '*', 0, $where, $param, $extra);
        return $data;
    }

    /**
     * 获取单条留言信息
     * @param $id
     * @return array|false|null|string
     * @throws \yii\db\Exception
     */
    public function getOne($id)
    {
        parent::$logParam['module'] = '碎片管理';
        parent::$logParam['action'] = '查看';
        parent::$logParam['cmd'] = '留言列表';
        $where = 'id=:id';
        $param['id'] = $id;
        $data = $this->getS(self::$message, '*', 1, $where, $param);
        parent::saveOptLog(1);
        return $data;
    }

    //删除留言
    public function Dels($ids)
    {
        parent::$logParam['module'] = '碎片管理';
        parent::$logParam['action'] = DELETE;
        parent::$logParam['cmd'] = '留言列表';
        $sql = "DELETE FROM " . self::$message . " WHERE (id IN ($ids))";
        $ex = parent::$handle->createCommand($sql);
        $ex->execute();
        parent::saveOptLog(1);
        return true;
    }

}